Installing & Configuring Snort
-----------------------------------------------------------------------------------------------------
===========================================================
-----------------------------------------------------------------------------------------------------
Snort has 3 main operational modes -
1 Packet sniffing - collects and displays network traffic like Wireshark
2 Packet Logging - Collects and logs network traffic into a file
3 Network intrusion detection - Analyzes packets and matches traffic against signatures 



-----------------------------------------------------------------------------------------------------

Install snort on Kali

1.Backup kali's sources.list

sudo su

mv /etc/apt/sources.list /etc/apt/sources.list.bak

2.Remove updates

find /var/lib/apt/lists -type f -exec rm {} \;

3.Change sources.list content

sudo nano /etc/apt/sources.list

Paste content given below
deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb-src http://archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
deb http://archive.canonical.com/ubuntu focal partner
deb-src http://archive.canonical.com/ubuntu focal partner

If you are using kali as a virtual machine then paste this instead
As core Ubuntu repositories do not have the ARM repositories in them
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports focal main restricted universe multiverse
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports focal-updates main restricted universe multiverse
deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports focal-security main restricted universe multiverse
deb [arch=i386,amd64] http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
deb [arch=i386,amd64] http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
deb [arch=i386,amd64] http://security.ubuntu.com/ubuntu focal-security main restricted universe multiverse

ctrl+x
y
enter 

4. Add the specified public keys

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C

5. Update

sudo apt update

6. Now install snort

sudo apt install snort

===========================================================
Implement below command one by one ---
===========================================================
   mv /etc/apt/sources.list /etc/apt/sources.list.bak\n
-----------------------------------------------------------------
   find /var/lib/apt/lists -type f -exec rm {} \;\n
-----------------------------------------------------------------
   sudo nano /etc/apt/sources.list\n
----------------------------------------------------------------
   sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32\n
----------------------------------------------------------------
   sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C\n
-----------------------------------------------------------------
    apt update
-----------------------------------------------------------------
    ls
-----------------------------------------------------------------
    sudo apt install snort
or 
sudo apt install snort -y
-----------------------------------------------------------------
    snort --version
----------------------------------------------------------------
   cd /etc/snort\\n
----------------------------------------------------------------
   ls
----------------------------------------------------------------
 cat snort.lua
----------------------------------------------------------------
for backup  
cp snort.lua /etc
----------------------------------------------------------------
in root open 
sudo nano snort.lua 
============================================
-- 1. configure defaults
---------------------------------------------------------------------------

-- HOME_NET and EXTERNAL_NET must be set now
-- setup the network addresses you are protecting
HOME_NET = 'any'

-- set up the external network addresses.
-- (leave as "any" in most situations)
EXTERNAL_NET = 'any'

include 'snort_defaults.lua'


=====================================
----------------------------------------------------------------
┌──(root㉿kali)-[/etc/snort]
└─# snort -T -i eth0 -c snort.lua

----------------------------------------------------------------

sudo ip link set enp0 promisc on 
----------------------------------------------------------------
man snort
or 
snort --help
---------------------------------------------------------------

----------------------------------------------------------------

===========================================================

output -

┌──(kali㉿kali)-[~]
└─$ sudo -s                            
[sudo] password for kali: 
┌──(root㉿kali)-[/home/kali]
└─# find /var/lib/apt/lists -type f -exec rm {} \;

                                                                             
┌──(root㉿kali)-[/home/kali]
└─# mv /etc/apt/sources.list /etc/apt/sources.list.bak

                                                                             
┌──(root㉿kali)-[/home/kali]
└─# find /var/lib/apt/lists -type f -exec rm {} \;

                                                                             
┌──(root㉿kali)-[/home/kali]
└─# sudo nano /etc/apt/sources.list

                                                                             
┌──(root㉿kali)-[/home/kali]
└─# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32

Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Executing: /tmp/apt-key-gpghome.DTgsB635J0/gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
gpg: key 3B4FE6ACC0B21F32: public key "Ubuntu Archive Automatic Signing Key (2012) <ftpmaster@ubuntu.com>" imported
gpg: Total number processed: 1
gpg:               imported: 1
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C

Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Executing: /tmp/apt-key-gpghome.uJ1yowqmY0/gpg.1.sh --keyserver keyserver.ubuntu.com --recv-keys 871920D1991BC93C
gpg: key 871920D1991BC93C: public key "Ubuntu Archive Automatic Signing Key (2018) <ftpmaster@ubuntu.com>" imported
gpg: Total number processed: 1
gpg:               imported: 1
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# apt update
Get:1 http://ports.ubuntu.com/ubuntu-ports focal InRelease [265 kB]         
Get:2 http://security.ubuntu.com/ubuntu focal-security InRelease [128 kB]   
Get:3 http://us.archive.ubuntu.com/ubuntu focal InRelease [265 kB]          
.............................................
Get:75 http://ports.ubuntu.com/ubuntu-ports focal-security/multiverse Translation-en [5,968 B]
Fetched 1,528 MB in 12min 6s (2,106 kB/s)                                   
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
109 packages can be upgraded. Run 'apt list --upgradable' to see them.
-----------...............................
W: http://us.archive.ubuntu.com/ubuntu/dists/focal-updates/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# 
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# ls
Desktop    Downloads  Pictures  Templates  volatility3
Documents  Music      Public    Videos
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# sudo apt install snort
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
snort is already the newest version (3.1.82.0-0kali1+b1).
The following packages were automatically installed and are no longer required:
  libnsl-dev libtirpc-dev
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 109 not upgraded.
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# snort --verson        
ERROR: unknown option --verson 
FATAL: see prior 1 errors
Fatal Error, Quitting..
                                                                             
┌──(root㉿kali)-[/home/kali]
└─# snort --version

   ,,_     -*> Snort++ <*-
  o"  )~   Version 3.1.82.0
   ''''    By Martin Roesch & The Snort Team
           http://snort.org/contact#team
           Copyright (C) 2014-2024 Cisco and/or its affiliates. All rights reserved.
           Copyright (C) 1998-2013 Sourcefire, Inc., et al.
           Using DAQ version 3.0.12
           Using LuaJIT version 2.1.1700206165
           Using OpenSSL 3.3.2 3 Sep 2024
           Using libpcap version 1.10.5 (with TPACKET_V3)
           Using PCRE version 8.39 2016-06-14
           Using ZLIB version 1.2.11
           Using LZMA version 5.2.7

                                                                             
┌──(root㉿kali)-[/home/kali]
└─# cd /etc/snort\
> 
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# ls
balanced.lua           inline.lua      sensitive_data.rules  talos.lua
community-sid-msg.map  max_detect.lua  snort.debian.lua
connectivity.lua       rules           snort_defaults.lua
file_magic.rules       security.lua    snort.lua
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# snort.lua
snort.lua: command not found
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# cat snort.lua 
---------------------------------------------------------------------------
-- Snort++ configuration
---------------------------------------------------------------------------

-- there are over 200 modules available to tune your policy.
-- many can be used with defaults w/o any explicit configuration.
-- use this conf as a template for your specific configuration.

-- 1. configure defaults
-- 2. configure inspection
-- 3. configure bindings
-- 4. configure performance
-- 5. configure detection
-- 6. configure filters
-- 7. configure outputs
-- 8. configure tweaks

---------------------------------------------------------------------------
-- 1. configure defaults
---------------------------------------------------------------------------

-- HOME_NET and EXTERNAL_NET must be set now
-- setup the network addresses you are protecting
HOME_NET = 'any'

-- set up the external network addresses.
-- (leave as "any" in most situations)
EXTERNAL_NET = 'any'

include 'snort_defaults.lua'

---------------------------------------------------------------------------
-- 2. configure inspection
---------------------------------------------------------------------------

-- mod = { } uses internal defaults
-- you can see them with snort --help-module mod

-- mod = default_mod uses external defaults
-- you can see them in snort_defaults.lua

-- the following are quite capable with defaults:

stream = { }
stream_ip = { }
stream_icmp = { }
stream_tcp = { }
stream_udp = { }
stream_user = { }
stream_file = { }

arp_spoof = { }
back_orifice = { }
dns = { }
imap = { }
netflow = {}
normalizer = { }
pop = { }
rpc_decode = { }
sip = { }
ssh = { }
ssl = { }
telnet = { }

cip = { }
dnp3 = { }
iec104 = { }
mms = { }
modbus = { }
s7commplus = { }

dce_smb = { }
dce_tcp = { }
dce_udp = { }
dce_http_proxy = { }
dce_http_server = { }

-- see snort_defaults.lua for default_*
gtp_inspect = default_gtp
port_scan = default_med_port_scan
smtp = default_smtp

ftp_server = default_ftp_server
ftp_client = { }
ftp_data = { }

http_inspect = { }
http2_inspect = { }

-- see file_magic.rules for file id rules
file_id = { rules_file = 'file_magic.rules' }
file_policy = { }

js_norm = default_js_norm

-- the following require additional configuration to be fully effective:

appid =
{
    -- appid requires this to use appids in rules
    --app_detector_dir = 'directory to load appid detectors from'
}

--[[
reputation =
{
    -- configure one or both of these, then uncomment reputation
    -- (see also related path vars at the top of snort_defaults.lua)

    --blacklist = 'blacklist file name with ip lists'
    --whitelist = 'whitelist file name with ip lists'
}
--]]

---------------------------------------------------------------------------
-- 3. configure bindings
---------------------------------------------------------------------------

wizard = default_wizard

binder =
{
    -- port bindings required for protocols without wizard support
    { when = { proto = 'udp', ports = '53', role='server' },  use = { type = 'dns' } },
    { when = { proto = 'tcp', ports = '53', role='server' },  use = { type = 'dns' } },
    { when = { proto = 'tcp', ports = '111', role='server' }, use = { type = 'rpc_decode' } },
    { when = { proto = 'tcp', ports = '502', role='server' }, use = { type = 'modbus' } },
    { when = { proto = 'tcp', ports = '2123 2152 3386', role='server' }, use = { type = 'gtp_inspect' } },
    { when = { proto = 'tcp', ports = '2404', role='server' }, use = { type = 'iec104' } },
    { when = { proto = 'udp', ports = '2222', role = 'server' }, use = { type = 'cip' } },
    { when = { proto = 'tcp', ports = '44818', role = 'server' }, use = { type = 'cip' } },

    { when = { proto = 'tcp', service = 'dcerpc' },  use = { type = 'dce_tcp' } },
    { when = { proto = 'udp', service = 'dcerpc' },  use = { type = 'dce_udp' } },
    { when = { proto = 'udp', service = 'netflow' }, use = { type = 'netflow' } },

    { when = { service = 'netbios-ssn' },      use = { type = 'dce_smb' } },
    { when = { service = 'dce_http_server' },  use = { type = 'dce_http_server' } },
    { when = { service = 'dce_http_proxy' },   use = { type = 'dce_http_proxy' } },

    { when = { service = 'cip' },              use = { type = 'cip' } },
    { when = { service = 'dnp3' },             use = { type = 'dnp3' } },
    { when = { service = 'dns' },              use = { type = 'dns' } },
    { when = { service = 'ftp' },              use = { type = 'ftp_server' } },
    { when = { service = 'ftp-data' },         use = { type = 'ftp_data' } },
    { when = { service = 'gtp' },              use = { type = 'gtp_inspect' } },
    { when = { service = 'imap' },             use = { type = 'imap' } },
    { when = { service = 'http' },             use = { type = 'http_inspect' } },
    { when = { service = 'http2' },            use = { type = 'http2_inspect' } },
    { when = { service = 'iec104' },           use = { type = 'iec104' } },
    { when = { service = 'mms' },              use = { type = 'mms' } },
    { when = { service = 'modbus' },           use = { type = 'modbus' } },
    { when = { service = 'pop3' },             use = { type = 'pop' } },
    { when = { service = 'ssh' },              use = { type = 'ssh' } },
    { when = { service = 'sip' },              use = { type = 'sip' } },
    { when = { service = 'smtp' },             use = { type = 'smtp' } },
    { when = { service = 'ssl' },              use = { type = 'ssl' } },
    { when = { service = 'sunrpc' },           use = { type = 'rpc_decode' } },
    { when = { service = 's7commplus' },       use = { type = 's7commplus' } },
    { when = { service = 'telnet' },           use = { type = 'telnet' } },

    { use = { type = 'wizard' } }
}

---------------------------------------------------------------------------
-- 4. configure performance
---------------------------------------------------------------------------

-- use latency to monitor / enforce packet and rule thresholds
--latency = { }

-- use these to capture perf data for analysis and tuning
--profiler = { }
--perf_monitor = { }

---------------------------------------------------------------------------
-- 5. configure detection
---------------------------------------------------------------------------

references = default_references
classifications = default_classifications

ips =
{
    -- use this to enable decoder and inspector alerts
    --enable_builtin_rules = true,

    -- use include for rules files; be sure to set your path
    -- note that rules files can include other rules files
    -- (see also related path vars at the top of snort_defaults.lua)

    variables = default_variables
}

-- use these to configure additional rule actions
-- react = { }
-- reject = { }

-- use this to enable payload injection utility
-- payload_injector = { }

---------------------------------------------------------------------------
-- 6. configure filters
---------------------------------------------------------------------------

-- below are examples of filters
-- each table is a list of records

--[[
suppress =
{
    -- don't want to any of see these
    { gid = 1, sid = 1 },

    -- don't want to see anything for a given host
    { track = 'by_dst', ip = '1.2.3.4' }

    -- don't want to see these for a given host
    { gid = 1, sid = 2, track = 'by_dst', ip = '1.2.3.4' },
}
--]]

--[[
event_filter =
{
    -- reduce the number of events logged for some rules
    { gid = 1, sid = 1, type = 'limit', track = 'by_src', count = 2, seconds = 10 },
    { gid = 1, sid = 2, type = 'both',  track = 'by_dst', count = 5, seconds = 60 },
}
--]]

--[[
rate_filter =
{
    -- alert on connection attempts from clients in SOME_NET
    { gid = 135, sid = 1, track = 'by_src', count = 5, seconds = 1,
      new_action = 'alert', timeout = 4, apply_to = '[$SOME_NET]' },

    -- alert on connections to servers over threshold
    { gid = 135, sid = 2, track = 'by_dst', count = 29, seconds = 3,
      new_action = 'alert', timeout = 1 },
}
--]]

---------------------------------------------------------------------------
-- 7. configure outputs
---------------------------------------------------------------------------

-- event logging
-- you can enable with defaults from the command line with -A <alert_type>
-- uncomment below to set non-default configs
--alert_csv = { }
--alert_fast = { }
--alert_full = { }
--alert_sfsocket = { }
--alert_syslog = { }
--unified2 = { }

-- packet logging
-- you can enable with defaults from the command line with -L <log_type>
--log_codecs = { }
--log_hext = { }
--log_pcap = { }

-- additional logs
--packet_capture = { }
--file_log = { }

---------------------------------------------------------------------------
-- 8. configure tweaks
---------------------------------------------------------------------------

if ( tweaks ~= nil ) then
    include(tweaks .. '.lua')
end

=============================================================
┌──(kali㉿kali)-[~]
└─$ cd /etc/snort
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ ls
balanced.lua           inline.lua      sensitive_data.rules  talos.lua
community-sid-msg.map  max_detect.lua  snort.debian.lua
connectivity.lua       rules           snort_defaults.lua
file_magic.rules       security.lua    snort.lua
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ man snort    

No manual entry for snort
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ snort --h

Snort has several options to get more help:

-? list command line options (same as --help)
--help this overview of help
--help-commands [<module prefix>] output matching commands
--help-config [<module prefix>] output matching config options
--help-counts [<module prefix>] output matching peg counts
--help-limits print the int upper bounds denoted by max*
--help-module <module> output description of given module
--help-modules list all available modules with brief help
--help-modules-json dump description of all available modules in JSON format
--help-plugins list all available plugins with brief help
--help-options [<option prefix>] output matching command line options
--help-signals dump available control signals
--list-buffers output available inspection buffers
--list-builtin [<module prefix>] output matching builtin rules
--list-gids [<module prefix>] output matching generators
--list-modules [<module type>] list all known modules
--list-plugins list all known modules
--show-plugins list module and plugin versions

--help* and --list* options preempt other processing so should be last on the
command line since any following options are ignored.  To ensure options like
--markup and --plugin-path take effect, place them ahead of the help or list
options.

Options that filter output based on a matching prefix, such as --help-config
won't output anything if there is no match.  If no prefix is given, everything
matches.

Report bugs to bugs@snort.org.

                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ cd           
                                                                             
┌──(kali㉿kali)-[~]
└─$ snort --h

Snort has several options to get more help:

-? list command line options (same as --help)
--help this overview of help
--help-commands [<module prefix>] output matching commands
--help-config [<module prefix>] output matching config options
--help-counts [<module prefix>] output matching peg counts
--help-limits print the int upper bounds denoted by max*
--help-module <module> output description of given module
--help-modules list all available modules with brief help
--help-modules-json dump description of all available modules in JSON format
--help-plugins list all available plugins with brief help
--help-options [<option prefix>] output matching command line options
--help-signals dump available control signals
--list-buffers output available inspection buffers
--list-builtin [<module prefix>] output matching builtin rules
--list-gids [<module prefix>] output matching generators
--list-modules [<module type>] list all known modules
--list-plugins list all known modules
--show-plugins list module and plugin versions

--help* and --list* options preempt other processing so should be last on the
command line since any following options are ignored.  To ensure options like
--markup and --plugin-path take effect, place them ahead of the help or list
options.

Options that filter output based on a matching prefix, such as --help-config
won't output anything if there is no match.  If no prefix is given, everything
matches.

Report bugs to bugs@snort.org.

                                                                             
┌──(kali㉿kali)-[~]
└─$ snort --help

Snort has several options to get more help:

-? list command line options (same as --help)
--help this overview of help
--help-commands [<module prefix>] output matching commands
--help-config [<module prefix>] output matching config options
--help-counts [<module prefix>] output matching peg counts
--help-limits print the int upper bounds denoted by max*
--help-module <module> output description of given module
--help-modules list all available modules with brief help
--help-modules-json dump description of all available modules in JSON format
--help-plugins list all available plugins with brief help
--help-options [<option prefix>] output matching command line options
--help-signals dump available control signals
--list-buffers output available inspection buffers
--list-builtin [<module prefix>] output matching builtin rules
--list-gids [<module prefix>] output matching generators
--list-modules [<module type>] list all known modules
--list-plugins list all known modules
--show-plugins list module and plugin versions

--help* and --list* options preempt other processing so should be last on the
command line since any following options are ignored.  To ensure options like
--markup and --plugin-path take effect, place them ahead of the help or list
options.

Options that filter output based on a matching prefix, such as --help-config
won't output anything if there is no match.  If no prefix is given, everything
matches.

Report bugs to bugs@snort.org.

                                                                             
┌──(kali㉿kali)-[~]
└─$ cd /etc/snort
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ ls
balanced.lua           inline.lua      sensitive_data.rules  talos.lua
community-sid-msg.map  max_detect.lua  snort.debian.lua
connectivity.lua       rules           snort_defaults.lua
file_magic.rules       security.lua    snort.lua
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ cp snort.lua /etc
cp: cannot create regular file '/etc/snort.lua': Permission denied
                                                                             
┌──(kali㉿kali)-[/etc/snort]
└─$ sudo su     
[sudo] password for kali: 
┌──(root㉿kali)-[/etc/snort]
└─# cp snort.lua /etc
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# 
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# nano snort.lua
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# sudo snort -T -i eth0 snort.lua
ERROR: unknown option - snort.lua
FATAL: see prior 1 errors
Fatal Error, Quitting..
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# snort -T -i eth0 -c snort.lua
--------------------------------------------------
o")~   Snort++ 3.1.82.0
--------------------------------------------------
Loading snort.lua:
Loading snort_defaults.lua:
Finished snort_defaults.lua:
        output
        active
        alerts
        host_tracker
        network
        process
        trace
        dce_http_proxy
        dce_http_server
        gtp_inspect
        port_scan
        smtp
        ftp_server
        ftp_client
        ftp_data
        http_inspect
        http2_inspect
        file_policy
        js_norm
        appid
        wizard
        binder
        classifications
        dce_udp
        dce_tcp
        dce_smb
        s7commplus
        modbus
        mms
        iec104
        dnp3
        cip
        telnet
        ssl
        ssh
        sip
        rpc_decode
        pop
        normalizer
        netflow
        imap
        dns
        back_orifice
        arp_spoof
        stream_file
        stream_user
        stream_udp
        stream_tcp
        stream_icmp
        stream_ip
        stream
        ips
        file_id
        references
        decode
        search_engine
        hosts
        so_proxy
        packets
        host_cache
        daq
Finished snort.lua:
Loading file_id.rules_file:
Loading file_magic.rules:
Finished file_magic.rules:
Finished file_id.rules_file:
--------------------------------------------------
ips policies rule stats
              id  loaded  shared enabled    file
               0     208       0     208    snort.lua
--------------------------------------------------
rule counts
       total rules loaded: 208
               text rules: 208
            option chains: 208
            chain headers: 1
--------------------------------------------------
service rule counts          to-srv  to-cli
                  file_id:      208     208
                    total:      208     208
--------------------------------------------------
fast pattern groups
                to_server: 1
                to_client: 1
--------------------------------------------------
search engine (ac_bnfa)
appid: MaxRss diff: 2744
appid: patterns loaded: 300
--------------------------------------------------
pcap DAQ configured to passive.

Snort successfully validated the configuration (with 0 warnings).
o")~   Snort exiting
                                                                             
┌──(root㉿kali)-[/etc/snort]
└─# 






------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
===============================================================
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
------------------------------------------------------------------------------------------------------------





Reference ---
https://www.youtube.com/watch?v=47WwmEwIPEI

https://www.youtube.com/watch?v=U6xMp-MIEfA

Blue Team Hacking | Intrusion Detection with Snort
https://www.youtube.com/watch?v=uPdCmuFh40M

